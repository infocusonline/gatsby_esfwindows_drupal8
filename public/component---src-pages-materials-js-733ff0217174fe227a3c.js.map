{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/pages/materials.js"],"names":["Layout","state","navbarOpen","handleNavbar","setState","render","theme","StyledPage","navbarState","this","InnerPage","props","children","Component","maxWidth","styled","div","About","FlexContainer","ul","SetImg","Img","Materials","data","materialBasicImage","materialBasicPageHeaderImage","relationships","field_basic_page_image","localFile","childImageSharp","fluid","dangerouslySetInnerHTML","__html","body","value","allNodeMaterials","edges","map","edge","images","node","field_materials_images","links","to","fields","slug","title"],"mappings":"g8jBAMMA,E,4JACJC,MAAQ,CACNC,YAAY,G,EAEdC,aAAe,WACb,EAAKC,SAAS,CAAEF,YAAa,EAAKD,MAAMC,c,4GAE1CG,OAAA,WACE,OACE,kBAAC,IAAD,CAAeC,MAAOA,GACpB,kBAACC,EAAD,KACE,kBAAC,IAAD,CACEC,YAAaC,KAAKR,MAAMC,WACxBC,aAAcM,KAAKN,eAErB,kBAACO,EAAD,KAAYD,KAAKE,MAAMC,WAEzB,kBAAC,IAAD,Q,GAjBaC,aAuBfP,EAAQ,CACZQ,SAAU,QAGNP,EAAaQ,IAAOC,IAAV,yEAAGD,CAAH,mCAIVL,EAAYK,IAAOC,IAAV,wEAAGD,CAAH,kGAEA,SAAAJ,GAAK,OAAIA,EAAML,MAAMQ,YAQrBd,O,uICoETiB,EAAQF,IAAOC,IAAV,uEAAGD,CAAH,uIAgBLG,EAAgBH,IAAOI,GAAV,+EAAGJ,CAAH,2OAyBbK,EAASL,YAAOM,KAAV,wEAAGN,CAAH,mFAQGO,UA9JG,WAChB,IAAMC,EAAI,OA0DJC,EACJD,EAAKE,6BAA6BC,cAAcC,uBAAuB,GACpEC,UAAUC,gBAAgBC,MAC/B,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKA,MAAON,IAEZ,kBAACP,EAAD,KACE,6CACA,uBACEc,wBAAyB,CACvBC,OAAQT,EAAKE,6BAA6BQ,KAAKC,UAKrD,kBAAChB,EAAD,KACGK,EAAKY,iBAAiBC,MAAMC,KAAI,SAAAC,GAC/B,IAAMC,EACJD,EAAKE,KAAKd,cAAce,uBAAuB,GAAGb,UAC/CC,gBAAgBC,MACfY,EACJ,kBAAC,IAAD,CAAMC,GAAE,cAAgBL,EAAKE,KAAKI,OAAOC,OAE3C,OACE,4BACE,kBAAC,IAAD,CAAMF,GAAID,EAAM/B,MAAMgC,IACpB,4BAAKL,EAAKE,KAAKM,OACdP,EACC,6BACE,kBAACnB,EAAD,CAAQU,MAAOS,KAGjB,6BACE,kDAA2B","file":"component---src-pages-materials-js-733ff0217174fe227a3c.js","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/HomePage/Footer'\nimport '../styles/index.scss'\nimport styled, { ThemeProvider } from 'styled-components'\n\nclass Layout extends Component {\n  state = {\n    navbarOpen: false,\n  }\n  handleNavbar = () => {\n    this.setState({ navbarOpen: !this.state.navbarOpen })\n  }\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledPage>\n          <Navbar\n            navbarState={this.state.navbarOpen}\n            handleNavbar={this.handleNavbar}\n          />\n          <InnerPage>{this.props.children}</InnerPage>\n        </StyledPage>\n        <Footer />\n      </ThemeProvider>\n    )\n  }\n}\n\nconst theme = {\n  maxWidth: 'auto',\n}\n\nconst StyledPage = styled.div`\n  background: white;\n  color: black;\n`\nconst InnerPage = styled.div`\n  /* border: 1px solid red; */\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  flex-grow: 1;\n`\n\nexport default Layout\n","import React from 'react'\nimport Layout from '../components/Layout'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\nimport { Link, useStaticQuery, graphql } from 'gatsby'\n\nconst Materials = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      materialBasicPageHeaderImage: nodePage(\n        id: { eq: \"bbdf6723-50cf-5efd-aebd-35e11c82fa70\" }\n      ) {\n        title\n        body {\n          value\n        }\n        relationships {\n          field_basic_page_image {\n            localFile {\n              childImageSharp {\n                fluid(maxWidth: 1575, maxHeight: 700) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n      allNodeMaterials {\n        edges {\n          node {\n            id\n            title\n            fields {\n              slug\n            }\n            relationships {\n              field_materials_images {\n                localFile {\n                  childImageSharp {\n                    fluid(maxWidth: 420, maxHeight: 240) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      materialsAluminumPage: allNodeMaterialsAluminumContent {\n        edges {\n          node {\n            id\n            title\n            fields {\n              slug\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const materialBasicImage =\n    data.materialBasicPageHeaderImage.relationships.field_basic_page_image[0]\n      .localFile.childImageSharp.fluid\n  return (\n    <div>\n      <Layout>\n        <Img fluid={materialBasicImage} />\n\n        <About>\n          <h1>Our Materials</h1>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: data.materialBasicPageHeaderImage.body.value,\n            }}\n          ></p>\n        </About>\n\n        <FlexContainer>\n          {data.allNodeMaterials.edges.map(edge => {\n            const images =\n              edge.node.relationships.field_materials_images[0].localFile\n                .childImageSharp.fluid\n            const links = (\n              <Link to={`/materials/${edge.node.fields.slug}`}></Link>\n            )\n            return (\n              <li>\n                <Link to={links.props.to}>\n                  <h1>{edge.node.title}</h1>\n                  {images ? (\n                    <div>\n                      <SetImg fluid={images} />\n                    </div>\n                  ) : (\n                    <div>\n                      <p>Image not available</p>{' '}\n                    </div>\n                  )}\n                </Link>\n              </li>\n            )\n          })}\n        </FlexContainer>\n      </Layout>\n    </div>\n  )\n}\n\n// styled Components\n\nconst About = styled.div`\n  margin: 0 auto;\n  width: 95%;\n  padding: 20px;\n  h1 {\n    padding-top: 1.4rem;\n\n    text-align: center;\n  }\n  p {\n    line-height: 1.6;\n    text-align: center;\n    color: #848484;\n  }\n`\n\nconst FlexContainer = styled.ul`\n  padding: 0.6rem;\n  display: flex;\n  /* flex-direction: row; */\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin: 60px auto;\n\n  h1 {\n    color: #2d385b;\n    font-size: 1.2rem;\n  }\n\n  li {\n    margin: 1rem;\n\n    list-style-type: none;\n    text-align: center;\n    font-weight: 30;\n    a {\n      text-decoration: none;\n      color: #000;\n    }\n  }\n`\nconst SetImg = styled(Img)`\n  display: block !important;\n  margin: 6px;\n  flex-grow: 1;\n  width: 330px;\n  border-radius: 2%;\n`\n\nexport default Materials\n"],"sourceRoot":""}