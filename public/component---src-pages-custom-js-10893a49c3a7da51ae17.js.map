{"version":3,"sources":["webpack:///./src/components/Layout.js","webpack:///./src/pages/custom.js"],"names":["Layout","state","navbarOpen","handleNavbar","setState","render","theme","StyledPage","navbarState","this","InnerPage","props","children","Component","maxWidth","styled","div","About","FlexContainer","ul","SetImg","Img","Custom","data","basicPageImage","customBasicPage","relationships","field_basic_page_image","localFile","childImageSharp","fluid","title","body","value","dangerouslySetInnerHTML","__html","allNodeCustom","edges","map","edge","customTitle","node","customImage","field_custom_image","to","fields","slug"],"mappings":"0KAMMA,E,4JACJC,MAAQ,CACNC,YAAY,G,EAEdC,aAAe,WACb,EAAKC,SAAS,CAAEF,YAAa,EAAKD,MAAMC,c,4GAE1CG,OAAA,WACE,OACE,kBAAC,IAAD,CAAeC,MAAOA,GACpB,kBAACC,EAAD,KACE,kBAAC,IAAD,CACEC,YAAaC,KAAKR,MAAMC,WACxBC,aAAcM,KAAKN,eAErB,kBAACO,EAAD,KAAYD,KAAKE,MAAMC,WAEzB,kBAAC,IAAD,Q,GAjBaC,aAuBfP,EAAQ,CACZQ,SAAU,QAGNP,EAAaQ,IAAOC,IAAV,yEAAGD,CAAH,mCAIVL,EAAYK,IAAOC,IAAV,wEAAGD,CAAH,kGAEA,SAAAJ,GAAK,OAAIA,EAAML,MAAMQ,YAQrBd,O,uIC6DTiB,EAAQF,IAAOC,IAAV,mEAAGD,CAAH,uIAgBLG,EAAgBH,IAAOI,GAAV,2EAAGJ,CAAH,2NAwBbK,EAASL,YAAOM,KAAV,oEAAGN,CAAH,mFAQGO,UArJA,WACb,IAAMC,EAAI,OAgDJC,EACJD,EAAKE,gBAAgBC,cAAcC,uBAAuB,GAAGC,UAC1DC,gBAAgBC,MACfC,EAAQR,EAAKE,gBAAgBM,MAC7BC,EAAOT,EAAKE,gBAAgBO,KAAKC,MAEvC,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKH,MAAON,IACZ,kBAACP,EAAD,KACE,4BAAKc,GACL,uBAAGG,wBAAyB,CAAEC,OAAQH,MAGxC,kBAACd,EAAD,KACGK,EAAKa,cAAcC,MAAMC,KAAI,SAAAC,GAC5B,IAAMC,EAAcD,EAAKE,KAAKV,MACxBW,EACJH,EAAKE,KAAKf,cAAciB,mBAAmB,GAAGf,UAC3CC,gBAAgBC,MACFS,EAAKE,KAAKT,KAAKC,MAClC,OACE,oCACE,4BACE,4BACE,kBAAC,IAAD,CAAMW,GAAE,WAAaL,EAAKE,KAAKI,OAAOC,MACpC,oCAOI,6BACE,4BAAKN,GACL,kBAACpB,EAAD,CAAQU,MAAOY,kB","file":"component---src-pages-custom-js-10893a49c3a7da51ae17.js","sourcesContent":["import React, { Component } from 'react'\nimport Navbar from '../components/Navbar/Navbar'\nimport Footer from '../components/HomePage/Footer'\nimport '../styles/index.scss'\nimport styled, { ThemeProvider } from 'styled-components'\n\nclass Layout extends Component {\n  state = {\n    navbarOpen: false,\n  }\n  handleNavbar = () => {\n    this.setState({ navbarOpen: !this.state.navbarOpen })\n  }\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <StyledPage>\n          <Navbar\n            navbarState={this.state.navbarOpen}\n            handleNavbar={this.handleNavbar}\n          />\n          <InnerPage>{this.props.children}</InnerPage>\n        </StyledPage>\n        <Footer />\n      </ThemeProvider>\n    )\n  }\n}\n\nconst theme = {\n  maxWidth: 'auto',\n}\n\nconst StyledPage = styled.div`\n  background: white;\n  color: black;\n`\nconst InnerPage = styled.div`\n  /* border: 1px solid red; */\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  flex-grow: 1;\n`\n\nexport default Layout\n","import React from 'react'\nimport { graphql, Link, useStaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\nimport styled from 'styled-components'\n\nimport Layout from '../components/Layout'\n\nconst Custom = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allNodeCustom {\n        edges {\n          node {\n            id\n            title\n            body {\n              value\n            }\n            fields {\n              slug\n            }\n            relationships {\n              field_custom_image {\n                localFile {\n                  childImageSharp {\n                    fluid(maxWidth: 420, maxHeight: 240) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      customBasicPage: nodePage(\n        id: { eq: \"623fad50-6b1f-588c-876c-cbb568b8d60d\" }\n      ) {\n        title\n        body {\n          value\n        }\n        relationships {\n          field_basic_page_image {\n            localFile {\n              childImageSharp {\n                fluid(maxWidth: 870, maxHeight: 400) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  const basicPageImage =\n    data.customBasicPage.relationships.field_basic_page_image[0].localFile\n      .childImageSharp.fluid\n  const title = data.customBasicPage.title\n  const body = data.customBasicPage.body.value\n\n  return (\n    <>\n      <Layout>\n        <Img fluid={basicPageImage} />\n        <About>\n          <h1>{title}</h1>\n          <p dangerouslySetInnerHTML={{ __html: body }}></p>\n        </About>\n\n        <FlexContainer>\n          {data.allNodeCustom.edges.map(edge => {\n            const customTitle = edge.node.title\n            const customImage =\n              edge.node.relationships.field_custom_image[0].localFile\n                .childImageSharp.fluid\n            const customBody = edge.node.body.value\n            return (\n              <>\n                <ul>\n                  <li>\n                    <Link to={`/custom/${edge.node.fields.slug}`}>\n                      <>\n                        {!customBody || !customImage ? (\n                          <div>\n                            <h1>{customTitle}</h1>\n                            <SetImg fluid={customImage} />\n                          </div>\n                        ) : (\n                          <div>\n                            <h1>{customTitle}</h1>\n                            <SetImg fluid={customImage} />\n                          </div>\n                        )}\n                      </>\n                    </Link>\n                  </li>\n                </ul>\n              </>\n            )\n          })}\n        </FlexContainer>\n      </Layout>\n    </>\n  )\n}\n\nconst About = styled.div`\n  margin: 0 auto;\n  width: 95%;\n  padding: 20px;\n  h1 {\n    padding-top: 1.4rem;\n\n    text-align: center;\n  }\n  p {\n    line-height: 1.6;\n    text-align: center;\n    color: #848484;\n  }\n`\n\nconst FlexContainer = styled.ul`\n  padding: 0.6rem;\n  display: flex;\n  /* flex-direction: row; */\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin: 60px auto;\n\n  h1 {\n    font-size: 18px;\n  }\n\n  li {\n    margin: 1rem;\n\n    list-style-type: none;\n    text-align: center;\n    font-weight: 30;\n    a {\n      text-decoration: none;\n      color: #000;\n    }\n  }\n`\nconst SetImg = styled(Img)`\n  display: block !important;\n  margin: 6px;\n  flex-grow: 1;\n  width: 330px;\n  border-radius: 2%;\n`\n\nexport default Custom\n"],"sourceRoot":""}